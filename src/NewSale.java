/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author PC
 */
import Project.ConnectionProvider;
import Project.Helper;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.HashMap;
import javax.swing.JOptionPane;

public class NewSale extends javax.swing.JFrame {

    /**
     * Creates new form NewSale
     */
    private HashMap<String, Object> itemTags;
    
    public void clear() {
        itemsCombo.setSelectedIndex(0);
        quantityField.setText("");
        saleTypeCombo.setSelectedIndex(0);
        totalCostField.setText("");

    }

    public NewSale() {
        initComponents();

        itemTags = Helper.itemData(itemsCombo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        itemsCombo = new javax.swing.JComboBox<>();
        quantityField = new javax.swing.JTextField();
        saleTypeCombo = new javax.swing.JComboBox<>();
        totalCostField = new javax.swing.JTextField();
        calculateBtn_ = new javax.swing.JButton();
        salesHomeBtn_ = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        newSaleSaveBtn_ = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NEW SALE");

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setText("Item");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setText("Quantity");

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel5.setText("Sale Type");

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setText("TotalCost");

        itemsCombo.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        itemsCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        quantityField.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        saleTypeCombo.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        saleTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Wholesale", "Retail" }));

        totalCostField.setEditable(false);
        totalCostField.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        calculateBtn_.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        calculateBtn_.setText("Calculate");
        calculateBtn_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateBtn_ActionPerformed(evt);
            }
        });

        salesHomeBtn_.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        salesHomeBtn_.setText("Home");
        salesHomeBtn_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesHomeBtn_ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setText("Ksh");

        newSaleSaveBtn_.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        newSaleSaveBtn_.setText("Save");
        newSaleSaveBtn_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSaleSaveBtn_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newSaleSaveBtn_, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(201, 201, 201)
                .addComponent(salesHomeBtn_, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(421, 421, 421))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(563, 563, 563)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(226, 226, 226)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(saleTypeCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 607, Short.MAX_VALUE)
                                .addComponent(quantityField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(itemsCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(calculateBtn_, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalCostField, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(itemsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(saleTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(calculateBtn_)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(totalCostField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newSaleSaveBtn_, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salesHomeBtn_, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(261, 261, 261))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void salesHomeBtn_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesHomeBtn_ActionPerformed
        setVisible(false);
        new HomePage2().setVisible(true);
    }//GEN-LAST:event_salesHomeBtn_ActionPerformed

    private void calculateBtn_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateBtn_ActionPerformed

        int currentQuantity = 0;
        float retailPrice = 0;
        float wholesalePrice = 0;
        int saleQuantity = 0;
        String saleType;

        //Get the itemID if the selected item
        Object tag = itemTags.get(itemsCombo.getSelectedItem());

        String itemId = null;
        if (tag != null && tag instanceof String) {
            itemId = (String) tag;
        } else {
            JOptionPane.showMessageDialog(null, "Please select an Item");
        }

        // Get form inputs
        if (quantityField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a quantity value.");
        } else {
            saleQuantity = Integer.parseInt(quantityField.getText());
            // rest of your code
        }
        saleType = (String) saleTypeCombo.getSelectedItem();

        try {

            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT Quantity, RetailPrice, WholesalePrice FROM items WHERE ItemId = '" + itemId + "'");

            if (rs.next()) { // check if there are any rows returned
                currentQuantity = rs.getInt("Quantity");
                retailPrice = rs.getFloat("RetailPrice");
                wholesalePrice = rs.getFloat("WholesalePrice");

            } else {
                JOptionPane.showMessageDialog(null, "No item found with ID " + itemId);
            }

            //Ensure the saleQuantity is not greater than the quantity available
            if (saleQuantity > currentQuantity) {
                JOptionPane.showMessageDialog(null, "The current quantity is " + currentQuantity + ". Please enter a value less than or equal to this.");
            }

            // Get the total cost of the sale
            float totalCost;
            if (saleType.equals("Wholesale")) {
                totalCost = saleQuantity * wholesalePrice;
            } else {
                totalCost = saleQuantity * retailPrice;
            }
            String strTotalCost = Float.toString(totalCost);

            totalCostField.setText(strTotalCost);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_calculateBtn_ActionPerformed

    private void newSaleSaveBtn_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSaleSaveBtn_ActionPerformed
        //Ensure you have calculated the total cost first
        String strTotalCost = totalCostField.getText();
        if (strTotalCost.isEmpty() || strTotalCost.equals("0.0")) {
            JOptionPane.showMessageDialog(null, "Please calculate the total cost before saving!!");
            
        } else {
            float totalCost = Float.parseFloat(strTotalCost);
            Object tag = itemTags.get(itemsCombo.getSelectedItem());
            String itemId = (String) tag;
            int quantity = Integer.parseInt(quantityField.getText());
            String saleType = (String) saleTypeCombo.getSelectedItem();
            
            try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("INSERT INTO sales (ItemID, Quantity, SaleType, TotalCost, SaleDate) VALUES (?, ?, ?, ?, ?)");
            ps.setString(1, itemId);
            ps.setInt(2, quantity);
            ps.setString(3, saleType);
            ps.setDouble(4, totalCost);
            ps.setDate(5, Date.valueOf(LocalDate.now()));
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Item added successfully!");
            clear();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

            JOptionPane.showMessageDialog(null, "Error: Failed to add item.");
        }

        }


    }//GEN-LAST:event_newSaleSaveBtn_ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewSale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculateBtn_;
    private javax.swing.JComboBox<String> itemsCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton newSaleSaveBtn_;
    private javax.swing.JTextField quantityField;
    private javax.swing.JComboBox<String> saleTypeCombo;
    private javax.swing.JButton salesHomeBtn_;
    private javax.swing.JTextField totalCostField;
    // End of variables declaration//GEN-END:variables
}
